"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/(admin)/users/page",{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   userApi: () => (/* binding */ userApi),\n/* harmony export */   vehicleApi: () => (/* binding */ vehicleApi)\n/* harmony export */ });\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! axios */ \"(app-pages-browser)/../../node_modules/axios/lib/axios.js\");\n\n// URL cơ sở của API backend\nconst API_BASE_URL = \"http://localhost:5000/api\" || 0;\n// Tạo axios instance với cấu hình mặc định\nconst apiClient = axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create({\n    baseURL: API_BASE_URL,\n    headers: {\n        'Content-Type': 'application/json'\n    },\n    timeout: 30000\n});\n// Interceptors để xử lý authentication token\napiClient.interceptors.request.use((config)=>{\n    var _config_method;\n    const token = localStorage.getItem('admin_token');\n    if (token) {\n        config.headers.Authorization = \"Bearer \".concat(token);\n    }\n    console.log(\"Gọi API: \".concat((_config_method = config.method) === null || _config_method === void 0 ? void 0 : _config_method.toUpperCase(), \" \").concat(config.url), config.params || config.data);\n    return config;\n}, (error)=>{\n    console.error('Lỗi request:', error.message);\n    return Promise.reject(error);\n});\n// Interceptors để xử lý token hết hạn\napiClient.interceptors.response.use((response)=>{\n    return response;\n}, async (error)=>{\n    var _error_response, _error_response1, _error_response2;\n    if (!error.response) {\n        console.error('Lỗi kết nối tới server:', error.message);\n        return Promise.reject(new Error('Không thể kết nối tới server. Vui lòng kiểm tra lại kết nối mạng.'));\n    }\n    const originalRequest = error.config;\n    if (!originalRequest) {\n        return Promise.reject(error);\n    }\n    // Nếu lỗi là 401 và chưa thử refresh token\n    if (((_error_response = error.response) === null || _error_response === void 0 ? void 0 : _error_response.status) === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n        try {\n            // Refresh token\n            const refreshToken = localStorage.getItem('admin_refresh_token');\n            if (!refreshToken) {\n                // Nếu không có refresh token, chuyển tới trang login thay vì đăng xuất trực tiếp\n                window.location.href = '/login';\n                return Promise.reject(new Error('Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.'));\n            }\n            const response = await axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"].post(\"\".concat(API_BASE_URL, \"/users/refresh-token\"), {\n                refreshToken\n            });\n            const { token } = response.data;\n            localStorage.setItem('admin_token', token);\n            // Cập nhật token trong header và thử lại request\n            originalRequest.headers.Authorization = \"Bearer \".concat(token);\n            return (0,axios__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(originalRequest);\n        } catch (err) {\n            // Nếu refresh token thất bại, chuyển tới trang login\n            window.location.href = '/login';\n            return Promise.reject(new Error('Phiên làm việc đã hết hạn. Vui lòng đăng nhập lại.'));\n        }\n    }\n    // Xử lý các lỗi HTTP khác\n    const errorData = (_error_response1 = error.response) === null || _error_response1 === void 0 ? void 0 : _error_response1.data;\n    const errorMessage = typeof errorData === 'object' && errorData !== null ? errorData.message || 'Đã xảy ra lỗi không xác định' : 'Đã xảy ra lỗi không xác định';\n    console.error(\"Lỗi API (\".concat((_error_response2 = error.response) === null || _error_response2 === void 0 ? void 0 : _error_response2.status, \"):\"), errorMessage);\n    return Promise.reject(error);\n});\n// Hàm đăng xuất\nconst logout = ()=>{\n    localStorage.removeItem('admin_token');\n    localStorage.removeItem('admin_refresh_token');\n    localStorage.removeItem('admin_user');\n    // Chuyển hướng đến trang đăng nhập\n    if (true) {\n        window.location.href = '/login';\n    }\n};\n// API endpoints cho quản lý người dùng\nconst userApi = {\n    // Đăng nhập admin\n    login: async (email, password)=>{\n        try {\n            const response = await apiClient.post('/users/admin-login', {\n                email,\n                password\n            });\n            const data = response.data;\n            // Lưu token ngay sau khi đăng nhập thành công\n            localStorage.setItem('admin_token', data.token);\n            localStorage.setItem('admin_refresh_token', data.refreshToken);\n            localStorage.setItem('admin_user', JSON.stringify({\n                _id: data._id,\n                full_name: data.full_name,\n                email: data.email,\n                role: data.role\n            }));\n            return data;\n        } catch (error) {\n            console.error('Lỗi đăng nhập:', error);\n            throw error;\n        }\n    },\n    // Lấy chi tiết người dùng theo ID\n    getUserDetails: async (userId)=>{\n        try {\n            const response = await apiClient.get(\"/users/admin/user/\".concat(userId));\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi lấy thông tin chi tiết người dùng:', error);\n            throw error;\n        }\n    },\n    // Lấy danh sách phương tiện của người dùng\n    getUserVehicles: async (userId)=>{\n        try {\n            const response = await apiClient.get(\"/vehicles/user/\".concat(userId));\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi lấy danh sách phương tiện của người dùng:', error);\n            throw error;\n        }\n    },\n    // Lấy danh sách người dùng\n    getUsers: async (params)=>{\n        try {\n            // Tạo đối tượng tham số tương thích với backend\n            const apiParams = {\n                search: params.search || '',\n                page: params.page || 1,\n                limit: params.limit || 10\n            };\n            // Xử lý tham số role\n            if (params.role && params.role !== 'all') {\n                apiParams.role = params.role;\n            }\n            // Xử lý tham số is_locked\n            if (params.is_locked !== undefined) {\n                apiParams.is_locked = params.is_locked;\n            }\n            // Xử lý tham số kyc_status\n            if (params.kyc_status && params.kyc_status !== 'all') {\n                apiParams.kyc_status = params.kyc_status;\n            }\n            const response = await apiClient.get('/users', {\n                params: apiParams\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi lấy danh sách người dùng:', error);\n            throw error;\n        }\n    },\n    // Khóa/mở khóa tài khoản người dùng\n    toggleUserLock: async (userId, isLocked)=>{\n        try {\n            const response = await apiClient.put('/users/toggle-lock', {\n                userId,\n                isLocked\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi thay đổi trạng thái khóa người dùng:', error);\n            throw error;\n        }\n    },\n    // Cập nhật trạng thái KYC\n    updateKycStatus: async (userId, kyc_status)=>{\n        try {\n            const response = await apiClient.post('/users/update-kyc-status', {\n                userId,\n                kycStatus: kyc_status // Đổi từ kyc_status thành kycStatus để phù hợp với API backend\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi cập nhật trạng thái KYC:', error);\n            throw error;\n        }\n    }\n};\n// API endpoints cho quản lý phương tiện\nconst vehicleApi = {\n    // Lấy danh sách phương tiện cho admin\n    getVehicles: async (params)=>{\n        try {\n            // Tạo đối tượng tham số tương thích với backend\n            const apiParams = {\n                page: params.page || 1,\n                limit: params.limit || 10\n            };\n            // Xử lý tham số tìm kiếm\n            if (params.search) {\n                apiParams.search = params.search;\n            }\n            // Xử lý tham số loại xe\n            if (params.type && params.type !== 'all') {\n                apiParams.type = params.type;\n            }\n            // Xử lý tham số trạng thái\n            if (params.status && params.status !== 'all') {\n                apiParams.status = params.status;\n            }\n            // Xử lý tham số người bán\n            if (params.seller && params.seller !== 'all') {\n                apiParams.seller = params.seller;\n            }\n            const response = await apiClient.get('/vehicles/admin', {\n                params: apiParams\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi lấy danh sách phương tiện:', error);\n            throw error;\n        }\n    },\n    // Cập nhật trạng thái phương tiện\n    updateVehicleStatus: async (vehicleId, status)=>{\n        try {\n            const response = await apiClient.put(\"/vehicles/admin/\".concat(vehicleId, \"/status\"), {\n                status\n            });\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi cập nhật trạng thái phương tiện:', error);\n            throw error;\n        }\n    },\n    // Lấy chi tiết phương tiện\n    getVehicleDetails: async (vehicleId)=>{\n        try {\n            const response = await apiClient.get(\"/vehicles/\".concat(vehicleId));\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi lấy chi tiết phương tiện:', error);\n            throw error;\n        }\n    },\n    // Xóa phương tiện\n    deleteVehicle: async (vehicleId)=>{\n        try {\n            const response = await apiClient.delete(\"/vehicles/\".concat(vehicleId));\n            return response.data;\n        } catch (error) {\n            console.error('Lỗi khi xóa phương tiện:', error);\n            throw error;\n        }\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (apiClient);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

});